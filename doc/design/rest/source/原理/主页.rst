.. .............................................................................
..
.. Filename       : 原理.rst
.. Author         : Huang Leilei
.. Created        : 2020-06-26
.. Description    : 主页
..
.. .............................................................................

=====
原理
=====

---------
核心原理
---------

    |   基于上述原因，《A Novel Video Watermarking Approach Based on Implicit Distortions》
    |   一文的作者Hannes提出了一种与编码器相结合的水印叠加方式。其核心原理是：

#.  在对视频进行编码的过程中，我们可以通过改变某一个帧内块的预测模式来引入一定程度的失真。

    \

#.  一方面，由于编码器在数据上的高度依赖性，因此，这一失真大概率会被有效地传递。

    \

#.  另一方面，由于并未改变其他块的决策，因此，视频的失真仍然能够被控制在一定的范围内。

    \


---------
初步展开
---------

#.  在对视频进行编码的过程中，我们可以通过改变某一个帧内块的预测模式来引入一定程度的失真。

    |   以HEVC标准的帧内预测为例，每个帧内块都可以选择35种预测模式进行预测，
        包括DC模式，Planar模式和33种角度模式。
    |   在绝大多数情况下，每种方式所得到的预测值都是不一样的。
    |   因此，改变预测方向就能够有效地改变预测像素，
        而改变预测像素会改变残差，
        改变残差又会改变由于量化所丢失的细节，
        并最终改变重建像素，从而引入失真。

    下图分别展示了全部基于Planar模式，全部基于DC模式和全部基于第18种角度模式对序列BlowingBubbles [#BlowingBubbles]_ 进行预测所得到的预测图像，其差异性是非常显著的。

    .. image:: 1.预测00.png

    \

    .. image:: 1.预测01.png

    \

    .. image:: 1.预测18.png

    \

#.  一方面，由于编码器在数据上的高度依赖性，因此，这一失真大概率会被有效地传递。

    依据HEVC标准，对于任意帧内块的预测都需要依赖于其周边相邻块的重建像素（如果存在的话）。

    .. image:: 2.预测传递.示意图.png

    |   如上图所示，
        对于像素块1和像素块2的预测（标记为灰色），都需要依赖于其左上，上方，右上，左方和左下的重建像素（标记为白色）。
    |   而显然地，像素块2所需要的左方参考像素恰恰就是像素块1经过预测、求差、变换、量化、反量化、反变换和求和所得到的重建像素。
    |   因此，如果由于预测方式的变化在块1中引入了失真，那么该失真很可能会被传播给块2，并继续传播给后续的图像块。

    |   下图分别展示了从第1个，第9个和第17个LCU [#LCU]_ 引入失真后的传递情况。
    |   （图中的深蓝色表示没有差异，浅蓝色表示有一定的差异，其他颜色表示差异较大。）

    .. image:: 2.预测传递.实测.lcu01.png

    \

    .. image:: 2.预测传递.实测.lcu09.png

    \

    .. image:: 2.预测传递.实测.lcu17.png

    \

#.  另一方面，由于并未改变其他块的决策，因此，视频的失真仍然能够被控制在一定的范围内。

    |   尽管为了引入失真，该算法改变了某个块所选出的最佳方向，
        但是其余块的最佳方向仍然是依照编码器正常的代价函数来进行选择的。
    |   因此，后续的块仍然能够保证一定的率失真水平。

    以下基于x265，对该算法进行了测试。

    调用x265时所采用的参数如下：

    ::

        --input            $FILE_SEQ.yuv                  \
        --fps              $DATA_FPS                      \
        --input-res        ${SIZE_FRA_X}x${SIZE_FRA_Y}    \
        --input-depth      $DATA_PXL_WD                   \
        --frames           $NUMB_FRA                      \
        --keyint           $SIZE_GOP                      \
        --qp               $DATA_QP                       \
        --ipratio          1                              \
        --pbratio          1                              \
        --output           ${PREF_DMP}x265.h265           \
        --output-depth     $DATA_PXL_WD                   \
        --recon            ${PREF_DMP}x265.yuv            \
        --recon-depth      $DATA_PXL_WD                   \
        --psnr                                            \
        --tune             psnr                           \
        --log-level        full                           \
        --no-progress                                     \
        --frame-threads    1                              \
        --no-wpp                                          \
        --no-pmode                                        \
        --no-pme                                          \

    其中所包含变量的意义如下
    
    .. table::
        :align: left
        :widths: auto

        ============ =============== ================================================================
        名称         含义            附注
        ============ =============== ================================================================
        FILE_SEQ     序列的位置
        DATA_FPS     序列的帧率
        SIZE_FRA_X   序列的宽度
        SIZE_FRA_Y   序列的高度
        DATA_PXL_WD  序列的比特深度
        NUMB_FRA     编码的帧数
        SIZE_GOP     编码的GOP       为了简化比较，此处仅测试了帧内编码，因此，该值设为1
        DATA_QP      编码的量化参数  为了得到B-D码率 [#B-D]_ 的结果，此处遍历了量化参数22，27，32，37
        PREF_DMP     导出的位置
        ============ =============== ================================================================

    B-D码率的结果如下：

    .. table::
        :align: left
        :widths: auto

        ================ ============ ============ ============ ==============
        序列              B-D码率(Y)   B-D码率(Y)   B-D码率(Y)   B-D码率(YUV)
        ================ ============ ============ ============ ==============
        BasketballPass    0.9%         0.4%         0.9%         0.8%
        BQSquare          0.8%         0.5%         0.1%         0.6%
        BlowingBubbles    0.4%         0.0%         0.0%         0.3%
        RaceHorses        0.4%         0.3%         0.2%         0.4%
        BasketballDrill   1.3%         1.0%         1.1%         1.2%
        BQMall            1.0%         0.7%         0.7%         0.9%
        PartyScene        0.6%         0.3%         0.3%         0.5%
        RaceHorsesC       0.6%         0.3%         0.4%         0.5%
        FourPeople        0.8%         0.3%         0.5%         0.7%
        Johnny            1.2%         0.7%         0.7%         1.0%
        KristenAndSara    1.0%         0.8%         1.0%         1.0%
        Kimono            0.4%         0.2%         0.2%         0.3%
        ParkScene         0.5%         0.2%         0.1%         0.4%
        Cactus            0.8%         0.3%         0.4%         0.6%
        BasketballDrive   1.1%         0.8%         0.7%         1.0%
        BQTerrace         0.8%         0.5%         0.5%         0.7%
        Traffic           0.7%         0.5%         0.3%         0.6%
        PeopleOnStreet    0.8%         0.6%         0.3%         0.7%
        ================ ============ ============ ============ ==============

    换言之，上述水印平均引入的B-D码率增量仅为0.7%。


-----
尾注
-----

.. [#BlowingBubbles] HM标准测试序列之一，大小为416×240
.. [#LCU] LCU，largest coding unit，最大编码单元，是HEVC编码器处理图像的最大单位，一般取64×64。
          此时，对于BlowingBubbles序列，一共有28个LCU，其中每行7个LCU（由6.5向上取整至7），每列4个（由3.75向上取整至4）。
.. [#B-D] 一种可以用来量化地衡量编码效果的手段，可以直观地理解为在取得相同PSNR的情况下，相比与前者，后者所额外需要的码率。
