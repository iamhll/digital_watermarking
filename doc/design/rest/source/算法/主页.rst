.. .............................................................................
..
.. Filename       : 算法.rst
.. Author         : Huang Leilei
.. Created        : 2020-06-26
.. Description    : 主页
..
.. .............................................................................

=====
算法
=====

---------
具体算法
---------

*   该论文的具体算法如下：

    选择某个特定块，

    *   如果编码器所选择的最佳模式为0，则将其修改为1；
    *   如果编码器所选择的最佳模式为1，则将其修改为0；
    *   如果编码器所选择的最佳模式为17或34，则将其修改为16或33；
    *   如果编码器所选择的最佳模式为其余模式，则将其修改为原模式加1。

    对应的伪代码如下：

    ::

        if (idxBlk == IDX_BLK_TARGET) {
            if (mode == 0)
                mode = 1;
            else if (mode == 1)
                mode = 0;
            else if (mode == 17 || mode == 34)
                --mode;
            else
                ++mode;
        }

    其中，mode代表编码器所选定的模式，idxBlk代表当前块的索引，IDX_BLK_TARGET代表目标块的索引。


---------
算法优点
---------

    显然，该算法的主要优点，或者说创新点，在于对编码器特性的高效利用。具体而言，该算法，

    *   一方面利用了编码器对于数据的强依赖特性，将局部的扰动扩散成了能够被识别的水印信息；
    *   另一方面又利用了编码器本身的代价函数，将水印信息对于视频率失真水平的影响限制在了非常小的范围内。


---------
算法缺点
---------

    然而，该算法也并非尽善尽美。我所观察到的主要缺点如下：

    #.  该算法并未提供选择特定块的有效方式，如果选择不当，可能无法造成失真，或者失真无法被扩散成能够被识别的水印信息。
    #.  该算法选择替换模式的依据并不充分，尤其是对Planar模式和DC模式进行的对调。
    #.  该算法的输入参数只有位置，难以满足为多个用户加入多个水印的需求。
    #.  该算法并未提供调节水印“强度”的有效方式，基于该算法，似乎只能通过选择位置改变水印的覆盖范围，但并不能改变水印的具体“强度”。


---------
算法移植
---------

    为了测试效果，此处基于x265 [#x265]_ 对该算法进行了移植，
    具体方式是：采用上述伪代码描述的逻辑覆盖/source/encoder/search.cpp中1655行处所使用的变量bmode。

    ::

        /* remeasure best mode, allowing TU splits */
        cu.setLumaIntraDirSubParts(bmode, absPartIdx, depth + initTuDepth);

    而当前块的大小和位置信息都可以从cuGeom结构体中的geomRecurId变量中获取。


-----
尾注
-----

.. [#x265] 选用的的版本为 3.0，可以通过 `bitbucket <https://bitbucket.org/multicoreware/x265/downloads/>`_ 下载
